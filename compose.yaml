version: "3.9"

################################################################################
#  ✨  Core ideas
#  ─────────────
#  • jupyter:          Same image you were using, nbconvert server-extension on.
#  • papermill-gateway: Tiny Flask wrapper that exposes POST /run on port 5005.
#                       It installs papermill & nbconvert at start-up, then runs
#                       notebooks it receives in an *ephemeral* tmp file.
#  • shared “work” volume so both services can read/write executed outputs if
#    you *also* want to store results on disk (optional).
#  • Both containers inherit the UID:GID trick from docker-stacks so files are
#    owned by you (see NB_UID/NB_GID env vars if needed).
################################################################################

services:
  jupyter:
    image: jupyter/scipy-notebook:latest
    ports:
      - "8888:8888"
    volumes:
      - jupyter-data:/home/jovyan/work              # persisted notebooks / data
      - ./notebooks:/home/jovyan/notebooks:rw       # your Git-pulled sources
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - JUPYTER_TOKEN=${JUPYTER_TOKEN:-changeme}
    command: >
      start-notebook.sh
      --ServerApp.jpserver_extensions="{'jupyter_server.nbconvert': True}"
      --ServerApp.token=''
      --ServerApp.password=''
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:8888/api | grep -q 'version'"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: unless-stopped
    mem_limit: 4g
    cpus: "2"
    labels:
      com.jupyter.description: "Jupyter Notebook Server (with nbconvert)"
      com.jupyter.environment: "homelab"

  papermill-gateway:
    image: jupyter/scipy-notebook:latest
    environment:
      - GATEWAY_PORT=5005
    command: |
      bash -c "
        pip install --no-cache-dir papermill flask && \
        cat > /tmp/gateway.py <<'PY'
from flask import Flask, request, send_file, jsonify
import papermill as pm, nbformat, tempfile, os, traceback

app = Flask(__name__)

@app.post('/run')
def run_notebook():
    try:
        nb_json = request.get_json(force=True)
        with tempfile.NamedTemporaryFile(suffix='.ipynb', delete=False) as src, \
             tempfile.NamedTemporaryFile(suffix='.ipynb', delete=False) as dst:
            nbformat.write(nb_json, src)
            src.flush()
            pm.execute_notebook(src.name, dst.name,
                                kernel_name=nb_json.get('metadata', {})
                                                 .get('kernelspec', {})
                                                 .get('name', 'python3'),
                                progress_bar=False)
            return send_file(dst.name,
                             mimetype='application/x-ipynb+json',
                             download_name=os.path.basename(dst.name))
    except Exception as e:
        return jsonify({'error': str(e),
                        'trace': traceback.format_exc()}), 500

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=int(os.environ.get('GATEWAY_PORT', 5005)))
PY
        python /tmp/gateway.py
      "
    volumes:
      - jupyter-data:/home/jovyan/work
    ports:
      - "5005:5005"
    restart: unless-stopped
    mem_limit: 2g
    cpus: "1"
    healthcheck:
      test: ["CMD-SHELL", "curl -sf http://localhost:5005/run || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

volumes:
  jupyter-data:
